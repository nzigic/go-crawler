// Code generated by gotsrpc https://github.com/foomo/gotsrpc  - DO NOT EDIT.

package crawler

import (
	net_http "net/http"

	gotsrpc "github.com/foomo/gotsrpc"
)

type CrawlerServiceGoTSRPCClient interface {
	Crawl(rootUrl string) (r []CrawlResult, clientErr error)
	SetClientEncoding(encoding gotsrpc.ClientEncoding)
	SetTransportHttpClient(client *net_http.Client)
}

type tsrpcCrawlerServiceGoTSRPCClient struct {
	URL      string
	EndPoint string
	Client   gotsrpc.Client
}

func NewDefaultCrawlerServiceGoTSRPCClient(url string) CrawlerServiceGoTSRPCClient {
	return NewCrawlerServiceGoTSRPCClient(url, "/services/crawler")
}

func NewCrawlerServiceGoTSRPCClient(url string, endpoint string) CrawlerServiceGoTSRPCClient {
	return NewCrawlerServiceGoTSRPCClientWithClient(url, "/services/crawler", nil)
}

func NewCrawlerServiceGoTSRPCClientWithClient(url string, endpoint string, client *net_http.Client) CrawlerServiceGoTSRPCClient {
	return &tsrpcCrawlerServiceGoTSRPCClient{
		URL:      url,
		EndPoint: endpoint,
		Client:   gotsrpc.NewClientWithHttpClient(client),
	}
}

func (tsc *tsrpcCrawlerServiceGoTSRPCClient) SetClientEncoding(encoding gotsrpc.ClientEncoding) {
	tsc.Client.SetClientEncoding(encoding)
}

func (tsc *tsrpcCrawlerServiceGoTSRPCClient) SetTransportHttpClient(client *net_http.Client) {
	tsc.Client.SetTransportHttpClient(client)
}
func (tsc *tsrpcCrawlerServiceGoTSRPCClient) Crawl(rootUrl string) (r []CrawlResult, clientErr error) {
	args := []interface{}{rootUrl}
	reply := []interface{}{&r}
	clientErr = tsc.Client.Call(tsc.URL, tsc.EndPoint, "Crawl", args, reply)
	return
}
