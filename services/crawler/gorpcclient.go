// Code generated by gotsrpc https://github.com/foomo/gotsrpc  - DO NOT EDIT.

package crawler

import (
	tls "crypto/tls"

	gorpc "github.com/valyala/gorpc"
)

type CrawlerServiceGoRPCClient struct {
	Client *gorpc.Client
}

func NewCrawlerServiceGoRPCClient(addr string, tlsConfig *tls.Config) *CrawlerServiceGoRPCClient {
	client := &CrawlerServiceGoRPCClient{}
	if tlsConfig == nil {
		client.Client = gorpc.NewTCPClient(addr)
	} else {
		client.Client = gorpc.NewTLSClient(addr, tlsConfig)
	}
	return client
}

func (tsc *CrawlerServiceGoRPCClient) Start() {
	tsc.Client.Start()
}

func (tsc *CrawlerServiceGoRPCClient) Stop() {
	tsc.Client.Stop()
}

func (tsc *CrawlerServiceGoRPCClient) Crawl(rootUrl string) (r []CrawlResult, clientErr error) {
	req := CrawlerServiceCrawlRequest{RootUrl: rootUrl}
	rpcCallRes, rpcCallErr := tsc.Client.Call(req)
	if rpcCallErr != nil {
		clientErr = rpcCallErr
		return
	}
	response := rpcCallRes.(CrawlerServiceCrawlResponse)
	return response.R, nil
}
